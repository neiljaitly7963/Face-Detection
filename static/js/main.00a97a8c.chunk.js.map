{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js","components/Logo/brain.svg"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","href","React","Component","Register","onNameChange","Logo","flexDirection","alt","src","brain","height","ImageLinkForm","onInputChange","onButtonSumbit","FaceRecognition","imageUrl","box","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","entries","app","Clarifai","App","apiKey","particlesOption","particles","number","density","enable","initialState","input","route","joined","data","jained","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"iUA4BeA,EA1BI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAElB,OAFiD,EAAhBC,WAI/B,yBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAgB,aAC5C,uBAAGC,QAAS,kBAAML,EAAc,YAAYM,UAAU,4BAAtD,eAOD,6BACC,yBAAKJ,MAAO,CAACC,QAAQ,OAAQC,eAAgB,aAC5C,uBAAGC,QAAS,kBAAML,EAAc,WAAWM,UAAU,4BAArD,cAGD,yBAAKJ,MAAO,CAACC,QAAQ,OAAQC,eAAgB,aAC5C,uBAAGC,QAAS,kBAAML,EAAc,aAAaM,UAAU,4BAAvD,iBCqEQC,E,kDArFd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAOPC,cAAgB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SATvB,EAYnBC,iBAAmB,SAACL,GACnB,EAAKC,SAAS,CAACK,eAAgBN,EAAMG,OAAOC,SAb1B,EAgBnBG,eAAiB,WAChBC,MAAM,sDAAuD,CAC5DC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACpBC,MAAO,EAAKC,MAAMb,YAClBc,SAAU,EAAKD,MAAMT,mBAGtBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACDA,EAAKC,KACR,EAAKvB,MAAMwB,SAASF,GACpB,EAAKtB,MAAMR,cAAc,aA3B3B,EAAKyB,MAAQ,CACZb,YAAa,GACbI,eAAgB,IAJC,E,qDAmCV,IAEChB,EAAkBiC,KAAKzB,MAAvBR,cACR,OACD,6BAASM,UAAU,mEAClB,0BAAMA,UAAU,gBAChB,yBAAKA,UAAU,YACb,8BAAUyB,GAAG,UAAUzB,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoB4B,QAAQ,iBAA7C,SACA,2BACA5B,UAAU,qEACV6B,KAAK,QACLC,KAAK,gBACLL,GAAG,gBACHM,SAAUJ,KAAKxB,iBAIjB,yBAAKH,UAAU,OACb,2BAAOA,UAAU,oBAAoB4B,QAAQ,YAA7C,YACA,2BACA5B,UAAU,uEACV6B,KAAK,WACLC,KAAK,WACLL,GAAG,WACHM,SAAUJ,KAAKlB,qBAKnB,yBAAKT,UAAU,IACb,2BACAD,QAAS4B,KAAKhB,eACdX,UAAU,uEACV6B,KAAK,SACLrB,MAAM,aAER,yBAAKR,UAAU,eACb,uBAAGD,QAAS,kBAAML,EAAc,aAAasC,KAAK,KAAKhC,UAAU,gCAAjE,oB,GA7EciC,IAAMC,WCmGZC,E,kDAjGd,WAAYjC,GAAQ,IAAD,8BAClB,cAAMA,IAQPkC,aAAe,SAAChC,GACf,EAAKC,SAAS,CAACyB,KAAM1B,EAAMG,OAAOC,SAVhB,EAanBL,cAAgB,SAACC,GAChB,EAAKC,SAAS,CAACa,MAAOd,EAAMG,OAAOC,SAdjB,EAiBnBC,iBAAmB,SAACL,GACnB,EAAKC,SAAS,CAACe,SAAUhB,EAAMG,OAAOC,SAlBpB,EAqBnBG,eAAiB,WAChBC,MAAM,wDAAyD,CAC9DC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACpBC,MAAO,EAAKC,MAAMD,MAClBE,SAAU,EAAKD,MAAMC,SACrBU,KAAM,EAAKX,MAAMW,SAGlBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACDA,EAAKC,KACR,EAAKvB,MAAMwB,SAASF,GACpB,EAAKtB,MAAMR,cAAc,aAjC3B,EAAKyB,MAAQ,CACZD,MAAO,GACPE,SAAU,GACVU,KAAM,IALW,E,qDA6CjB,OACD,6BAAS9B,UAAU,mEAClB,0BAAMA,UAAU,gBAChB,yBAAKA,UAAU,YACb,8BAAUyB,GAAG,UAAUzB,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,YACC,yBAAKA,UAAU,OACd,2BAAOA,UAAU,oBAAoB4B,QAAQ,QAA7C,QACA,2BACA5B,UAAU,qEACV6B,KAAK,OACLC,KAAK,OACLL,GAAG,OACHM,SAAUJ,KAAKS,gBAGjB,yBAAKpC,UAAU,OACb,2BAAOA,UAAU,oBAAoB4B,QAAQ,iBAA7C,SACA,2BACA5B,UAAU,qEACV6B,KAAK,QACLC,KAAK,gBACLL,GAAG,gBACHM,SAAUJ,KAAKxB,iBAGjB,yBAAKH,UAAU,OACb,2BAAOA,UAAU,oBAAoB4B,QAAQ,YAA7C,YACA,2BACA5B,UAAU,uEACV6B,KAAK,WACLC,KAAK,WACLL,GAAG,WACHM,SAAUJ,KAAKlB,qBAKnB,yBAAKT,UAAU,IACb,2BACAD,QAAS4B,KAAKhB,eACdX,UAAU,uEACV6B,KAAK,SACLrB,MAAM,qB,GA1FUyB,IAAMC,W,iBCYdG,G,OAVF,WACZ,OACC,yBAAKzC,MAAO,CAACC,QAAQ,OAAQyC,cAAc,WAExC,yBAAMC,IAAI,OAAOC,IAAKC,IAAOC,OAAQ,cCc3BC,G,OAnBO,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,eACtC,OACC,6BACC,uBAAG7C,UAAU,MACZ,sDAED,yBAAKA,UAAU,UACd,yBAAKA,UAAU,gCACd,2BAAOA,UAAU,qBAAqB6B,KAAK,OAAOE,SAAUa,IAC5D,4BACA5C,UAAU,2BACVD,QAAS8C,GAFT,eCCUC,G,OAXS,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,IACnC,OACC,yBAAKhD,UAAU,aACd,yBAAKA,UAAU,gBACd,yBAAKyB,GAAG,aAAac,IAAI,GAAGC,IAAKO,EAAUE,MAAM,QAAQC,MAAM,SAC/D,yBAAKlD,UAAU,eAAeJ,MAAO,CAACuD,IAAKH,EAAII,OAAQC,MAAOL,EAAIM,SAAUC,OAAQP,EAAIQ,UAAWC,KAAMT,EAAIU,eCQlGC,EAbF,SAAC,GAAuB,IAArB7B,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,QACpB,OACE,6BACE,uCACM9B,EADN,qCAGA,6BACG8B,K,2CCGHC,EAAM,IAAIC,IAASC,IAAI,CAACC,OAAQ,qCAEhCC,EAAkB,CACtBC,UAAW,CACTC,OAAQ,CACN3D,MAAO,GACP4D,QAAS,CACPC,QAAQ,EACR7D,MAAO,QAMT8D,EAAe,CAEfC,MAAO,GACPxB,SAAU,GACVC,IAAI,GACJwB,MAAO,SACP7E,YAAY,EACZ6B,KAAK,CACHC,GAAI,GACJK,KAAM,GACNZ,MAAO,GACP0C,QAAS,EACTa,OAAQ,KAkHDV,E,kDA5Gb,WAAY7D,GAAO,IAAD,8BAChB,cAAMA,IAIVwB,SAAW,SAACgD,GACV,EAAKrE,SAAS,CACZmB,KAAM,CACJC,GAAIiD,EAAKjD,GACTK,KAAM4C,EAAK5C,KACXZ,MAAOwD,EAAKxD,MACZ0C,QAASc,EAAKd,QACda,OAAQC,EAAKC,WAZC,EAmBpB/B,cAAgB,SAACxC,GACf,EAAKC,SAAS,CAACkE,MAAOnE,EAAMG,OAAOC,SApBjB,EAuBpBoE,sBAAwB,SAACF,GACvB,IAAMG,EAAeH,EAAKI,QAAQ,GAAGJ,KAAKK,QAAQ,GAAGC,YAAYC,aAC3DC,EAAQC,SAASC,eAAe,cAChCnC,EAAQoC,OAAOH,EAAMjC,OACrBP,EAAS2C,OAAOH,EAAMxC,QAE5B,OADA4C,QAAQC,IAAItC,EAAOP,GACZ,CACLgB,QAASmB,EAAaW,SAAWvC,EACjCG,OAAQyB,EAAaY,QAAU/C,EAC/BY,SAAUL,EAAS4B,EAAaa,UAAYzC,EAC5CO,UAAWd,EAAUmC,EAAac,WAAajD,IAjC/B,EAqCpBkD,eAAiB,SAAC5C,GAChB,EAAK3C,SAAS,CAAC2C,IAAKA,IACpBsC,QAAQC,IAAI,EAAKpE,MAAM6B,MAvCL,EA0CpBH,eAAiB,WACf,EAAKxC,SAAS,CAAC0C,SAAU,EAAK5B,MAAMoD,QACpCV,EAAIgC,OACDC,QACChC,IAASiC,kBACT,EAAK5E,MAAMoD,OACZlD,MAAK,SAAAC,GACDA,GACDV,MAAM,qDAAsD,CAC1DC,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBQ,GAAI,EAAKN,MAAMK,KAAKC,OAGrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA2E,GACJ,EAAK3F,SAAS4F,OAAOC,OAAO,EAAK/E,MAAMK,KAAM,CAACoC,QAASoC,QAExDG,MAAMb,QAAQC,KAEnB,EAAKK,eAAe,EAAKhB,sBAAsBtD,OAEhD6E,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,OAjEV,EAoEpB1G,cAAgB,SAAC8E,GACD,YAAVA,EACF,EAAKnE,SAAUiE,GAEE,SAAVE,GACP,EAAKnE,SAAS,CAAEV,YAAY,IAE9B,EAAKU,SAAS,CAACmE,MAAOA,KAzEpB,EAAKrD,MAAQmD,EAFG,E,qDAkFlB,OACE,yBAAKtE,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,YACVqG,OAAQpC,IAEV,kBAAC,EAAD,CAAYvE,cAAeiC,KAAKjC,cAAeC,WAAYgC,KAAKR,MAAMxB,aAChD,SAArBgC,KAAKR,MAAMqD,MACV,6BACE,kBAAC,EAAD,MACC,kBAAC,EAAD,CAAO1C,KAAMH,KAAKR,MAAMK,KAAKM,KAAM8B,QAASjC,KAAKR,MAAMK,KAAKoC,UAC7D,kBAAC,EAAD,CAAehB,cAAejB,KAAKiB,cAAeC,eAAgBlB,KAAKkB,iBACvE,kBAAC,EAAD,CAAiBG,IAAKrB,KAAKR,MAAM6B,IAAKD,SAAUpB,KAAKR,MAAM4B,YAGrC,WAArBpB,KAAKR,MAAMqD,MACZ,kBAAC,EAAD,CAAQ9C,SAAUC,KAAKD,SAAUhC,cAAeiC,KAAKjC,gBAErD,kBAAC,EAAD,CAAUgC,SAAUC,KAAKD,SAAUhC,cAAeiC,KAAKjC,qB,GArG/CwC,aC/BEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAASC,eAAe,SDwHpB,kBAAmB0B,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdf,OAAM,SAAAgB,GACL7B,QAAQ6B,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.00a97a8c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\r\n\t\t\tif (isSignedIn) {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<nav style={{display:'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t\t<p onClick={() => onRouteChange('signout')} className=' link dim black  pointer'> Sign Out </p>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<nav style={{display:'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t\t\t<p onClick={() => onRouteChange('signin')} className=' link dim black  pointer'> Sign In </p>\r\n\t\t\t\t\t\t</nav>\r\n\r\n\t\t\t\t\t\t<nav style={{display:'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t\t\t<p onClick={() => onRouteChange('Register')} className=' link dim black  pointer'> Register </p>\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Signin extends React.Component  {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://sheltered-stream-47657.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(user => {\r\n\t\t\tif (user.id){\r\n\t\t\t\tthis.props.loadUser(user)\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t    \r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\t\tconst { onRouteChange } = this.props;\r\n\t\t\treturn(\r\n\t\t<article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t  <div className=\"measure \">\r\n\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t      <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n\t      <div className=\"mt3\">\r\n\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t        <input \r\n\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t        type=\"email\" \r\n\t        name=\"email-address\"  \r\n\t        id=\"email-address\"\r\n\t        onChange={this.onEmailChange}\r\n\t         />\r\n\t    \r\n\t      </div>\r\n\t      <div className=\"mv3\">\r\n\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t        <input \r\n\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t        type=\"password\" \r\n\t        name=\"password\"  \r\n\t        id=\"password\" \r\n\t        onChange={this.onPasswordChange}\r\n\t        />\r\n\t      </div>\r\n\t     \r\n\t    </fieldset>\r\n\t    <div className=\"\">\r\n\t      <input \r\n\t      onClick={this.onSubmitSignIn}\r\n\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t      type=\"submit\" \r\n\t      value=\"Sign in\" />\r\n\t    </div>\r\n\t    <div className=\"lh-copy mt3\">\r\n\t      <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n\t\r\n\t    </div>\r\n\t  </div>\r\n\t</main>\r\n</article>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '', \r\n\t\t\tpassword: '',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://sheltered-stream-47657.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tname: this.state.name\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(user => {\r\n\t\t\tif (user.id){\r\n\t\t\t\tthis.props.loadUser(user)\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t    \r\n\t}\r\n\r\n\trender(){\r\n\r\n\r\n\r\n\t\t\treturn(\r\n\t\t<article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t  <div className=\"measure \">\r\n\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t      <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n\t       <div className=\"mt3\">\r\n\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t        <input \r\n\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t        type=\"text\" \r\n\t        name=\"name\"  \r\n\t        id=\"name\" \r\n\t        onChange={this.onNameChange}\r\n\t        />\r\n\t      </div>\r\n\t      <div className=\"mt3\">\r\n\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t        <input \r\n\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t        type=\"email\"\r\n\t        name=\"email-address\"  \r\n\t        id=\"email-address\"\r\n\t        onChange={this.onEmailChange} \r\n\t        />\r\n\t      </div>\r\n\t      <div className=\"mv3\">\r\n\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t        <input \r\n\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t        type=\"password\" \r\n\t        name=\"password\"  \r\n\t        id=\"password\" \r\n\t        onChange={this.onPasswordChange}\r\n\t        />\r\n\t      </div>\r\n\t     \r\n\t    </fieldset>\r\n\t    <div className=\"\">\r\n\t      <input \r\n\t      onClick={this.onSubmitSignIn}\r\n\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t      type=\"submit\" \r\n\t      value=\"Register\" />\r\n\t    </div>\r\n\t  </div>\r\n\t</main>\r\n</article>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport brain from './brain.svg'\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div style={{display:'flex', flexDirection:'column'}}>\r\n\t\t\t\r\n \t\t\t <img  alt='logo' src={brain} height= '150 px' /> \r\n\t\t\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSumbit}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t{'This Magic Brain will detect faces in your picture'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa2 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n\t\t\t\t\t<button \r\n\t\t\t\t\tclassName='w-30 grow  link    black'\r\n\t\t\t\t\tonClick={onButtonSumbit}\r\n\t\t\t\t\t>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div> \r\n\t\t)\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css'\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n\treturn(\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto' />\r\n\t\t\t\t<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}} ></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return(\r\n    <div>\r\n      <div>\r\n        {`${name}, your current entry count is...`}\r\n      </div>\r\n      <div>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({apiKey: '6050ce4a18ad4ea18ec6b4250d07bc71'});\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value: 800\n      }\n    } \n  }\n}\n\nconst initialState = {\n  \n      input: '',\n      imageUrl: '',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user:{\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      \n    }\n}\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = initialState;\n}\n\nloadUser = (data) => {\n  this.setState({\n    user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.jained\n    }\n  })\n}\n\n\n\nonInputChange = (event) => {\n  this.setState({input: event.target.value })\n}\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  console.log(width, height)\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box})\n  console.log(this.state.box)\n}\n\nonButtonSumbit = () => {\n  this.setState({imageUrl: this.state.input });\n  app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response =>{\n      if(response){\n        fetch('https://sheltered-stream-47657.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n}\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState( initialState )\n  }\n  else if (route === 'home') {\n    this.setState({ isSignedIn: true })\n  }\n  this.setState({route: route})\n} \n\n\n\nrender(){\n  \n  return(\n    <div className=\"App\">\n      <Particles \n        className='particles'\n        params={particlesOption}\n      />\n      <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n      {this.state.route === 'home' ? \n        <div>\n          <Logo />\n           <Rank  name={this.state.user.name} entries={this.state.user.entries} />\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSumbit={this.onButtonSumbit} />\n          <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n        </div>\n        :(\n           this.state.route === 'signin' ? \n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}  />\n          :\n          <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n          )\n      }\n    </div>\n    )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.ee2ceb67.svg\";"],"sourceRoot":""}